CREATE database dannys_diner;
use dannys_diner;

/*QUES 1*/
SELECT S.CUSTOMER_ID,SUM(M.PRICE) AS TOTAL_SPEND FROM SALES S 
JOIN MENU M ON S.PRODUCT_ID=M.PRODUCT_ID
GROUP BY S.CUSTOMER_ID; 

/*QUES 2*/
SELECT CUSTOMER_ID,COUNT(DISTINCT(ORDER_DATE)) AS DAYS_VISITED FROM SALES
GROUP BY CUSTOMER_ID;

/*QUES 3*/
WITH CTE AS ( SELECT *,ROW_NUMBER() OVER (PARTITION BY CUSTOMER_ID) AS RN FROM SALES)
SELECT CTE.CUSTOMER_ID,CTE.PRODUCT_ID FROM CTE
WHERE CTE.RN=1;

/*QUES4*/
WITH CTE AS (SELECT *,ROW_NUMBER() OVER (PARTITION BY PRODUCT_ID) AS RN FROM SALES)
SELECT CTE.PRODUCT_ID AS PD FROM CTE
WHERE RN=(SELECT MAX(CTE.RN) FROM CTE) ;

WITH CS AS (SELECT *,row_number() OVER(PARTITION BY PRODUCT_ID) AS RW
FROM SALES)
SELECT CS.CUSTOMER_ID,COUNT(CS.PRODUCT_ID) AS TIMES,CS.PRODUCT_ID AS MAX_PURCHASED_ID FROM CS
WHERE CS.PRODUCT_ID=(SELECT CS.PRODUCT_ID FROM CS WHERE CS.RW=(SELECT MAX(CS.RW) FROM CS))
GROUP BY CUSTOMER_ID,CS.PRODUCT_ID;

/*QUES5*/
WITH CTE AS (SELECT CUSTOMER_ID,COUNT(PRODUCT_ID) AS CN,PRODUCT_ID
FROM SALES
GROUP BY CUSTOMER_ID,PRODUCT_ID)
SELECT CTE.CUSTOMER_ID,MAX(CTE.CN) AS POP FROM CTE
GROUP BY CTE.CUSTOMER_ID;

/*QUES 6*/
WITH CTE AS (SELECT S.*,M.JOIN_DATE,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID) AS RW FROM SALES S 
JOIN MEMBERS M ON S.CUSTOMER_ID=M.CUSTOMER_ID
WHERE S.ORDER_DATE>=M.JOIN_DATE)
SELECT CTE.CUSTOMER_ID,CTE.PRODUCT_ID FROM CTE
WHERE RW=1;

/*QUES 7*/
WITH CTE AS (SELECT S.*,M.JOIN_DATE,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE) AS RW FROM SALES S 
JOIN MEMBERS M ON S.CUSTOMER_ID=M.CUSTOMER_ID
WHERE S.ORDER_DATE<M.JOIN_DATE)
SELECT CTE.CUSTOMER_ID,CTE.PRODUCT_ID,CTE.ORDER_DATE FROM CTE 
WHERE CTE.RW IN ( SELECT MAX(CTE.RW ) FROM CTE
GROUP BY CTE.CUSTOMER_ID)
ORDER BY CUSTOMER_ID,ORDER_DATE DESC
LIMIT 2;

/*QUES8*/
WITH CTE AS (SELECT S.*,M.JOIN_DATE,ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE) AS RW FROM SALES S 
JOIN MEMBERS M ON S.CUSTOMER_ID=M.CUSTOMER_ID
WHERE S.ORDER_DATE<M.JOIN_DATE) 
SELECT CTE.CUSTOMER_ID,SUM(MN.PRICE) AS SPENT,COUNT(ORDER_DATE) AS TIMES FROM CTE
JOIN MENU MN ON CTE.PRODUCT_ID=MN.PRODUCT_ID
GROUP BY CTE.CUSTOMER_ID;

/*QUES9*/
WITH CTE AS (SELECT S.*, IF(S.PRODUCT_ID=1,20 *M.PRICE,10*M.PRICE) AS POINTS FROM SALES S
JOIN MENU M ON S.PRODUCT_ID=M.PRODUCT_ID)
SELECT CTE.CUSTOMER_ID,SUM(CTE.POINTS) AS PNTS FROM CTE;

/*QUES10*/
WITH CTE AS (SELECT S.*, MN.JOIN_DATE,IF(S.PRODUCT_ID=1,20 *M.PRICE,10*M.PRICE) AS POINTS 
              FROM SALES S
               JOIN MENU M ON S.PRODUCT_ID=M.PRODUCT_ID
			   JOIN MEMBERS MN ON S.CUSTOMER_ID=MN.CUSTOMER_ID)
SELECT CTE.CUSTOMER_ID,CASE 
WHEN ORDER_DATE BETWEEN  CTE.JOIN_DATE AND FROM CTE
GROUP BY CTE.CUSTOMER_ID;


WITH CTE AS (SELECT S.*,M.PRICE, MN.JOIN_DATE, IF(S.PRODUCT_ID=1,20 *M.PRICE,10*M.PRICE) AS POINTS 
              FROM SALES S
               JOIN MENU M ON S.PRODUCT_ID=M.PRODUCT_ID
			   JOIN MEMBERS MN ON S.CUSTOMER_ID=MN.CUSTOMER_ID)
SELECT CTE. CUSTOMER_ID, SUM(CASE 
WHEN CTE.ORDER_DATE BETWEEN CTE.JOIN_DATE AND DATE_ADD(CTE.JOIN_DATE, INTERVAL 1 WEEK ) THEN (20*CTE.PRICE)+POINTS
ELSE (10*CTE.PRICE+POINTS)
END) AS PNTS
FROM CTE
GROUP BY CTE.CUSTOMER_ID;
